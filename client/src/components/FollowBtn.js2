import React, { useState, useEffect } from 'react'
import { useSelector, useDispatch } from 'react-redux'
import { blockUser, unblockUser } from '../../redux/actions/userAction'
 
const FollowBtn = ({user}) => {
    const [bloqueado, setBloqueado] = useState(false)

    const { auth, profile, socket } = useSelector(state => state)
    const dispatch = useDispatch()

    const [load, setLoad] = useState(false)

    useEffect(() => {
        if(auth.user.following.find(item => item._id === user._id)){
            setBloqueado(true)
        }
        return () => setBloqueado(false)
    }, [auth.user.following, user._id])

    const handleBlock =  async () => {
        if(load) return;

        setBloqueado(true)
        setLoad(true)
        await dispatch(blockUser({users: profile.users, user, auth, socket}))
        setLoad(false)
    }

    const handleunBlock = async () => {
        if(load) return;

        setBloqueado(false)
        setLoad(true)
        await dispatch(unblockUser({users: profile.users, user, auth, socket}))
        setLoad(false)
    }

    return (
        <>
        {
            bloqueado
            ? <button className="btn btn-outline-danger"
            onClick={handleunBlock}>
              Pas recevoir des notifications
            </button>
            : <button className="btn btn-outline-info"
            onClick={handleBlock}>
             Recevoir des notifications
            </button>
        }
        </>
    )
}

export default FollowBtn
